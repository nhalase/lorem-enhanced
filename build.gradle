plugins {
	id "net.saliman.cobertura" version "2.3.2"
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'findbugs'

version = '1.0.0'
group = 'com.github.nhalase'
archivesBaseName = 'lorem-enhanced'
jar.baseName = 'lorem-enhanced'
description = "an enhanced lorem ipsum generator"

sourceCompatibility = 1.7
targetCompatibility = 1.7

def isDevBuild
def isCiBuild
def isReleaseBuild

def sonatypeRepositoryUrl

if (hasProperty("release")) {
	isReleaseBuild = true
	sonatypeRepositoryUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
} else if (hasProperty("ci")) {
	isCiBuild = true
	version += "-SNAPSHOT"
	sonatypeRepositoryUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
} else {
	isDevBuild = true
}

task wrapper(type: Wrapper) {
	gradleVersion = "3.1"
}

repositories {
	mavenCentral()
}

project.ext {
	slf4jVersion   = '1.7.21'
	junitVersion   = '4.12'
}

dependencies {
	compile "org.slf4j:log4j-over-slf4j:${slf4jVersion}"
	testCompile "junit:junit:${junitVersion}"
}

cobertura {
	coverageFormats = ['xml', 'html']
	coverageIgnoreTrivial = true // ignore getters/setters
}

tasks.withType(FindBugs) {
	reports {
		// only one reporting type can be enabled at a time
		// jenkins expects xml
		xml.enabled true
		html.enabled false
	}
}

task javadocJar(type: Jar) {
	classifier = 'javadoc'
	from javadoc
}

task sourcesJar(type: Jar) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

artifacts {
	archives javadocJar, sourcesJar
}

if (isReleaseBuild) {
	signing {
		sign configurations.archives
	}
} else {
	task signArchives {
		// do nothing
	}
}

uploadArchives {
	repositories {
		if (isDevBuild) {
			mavenLocal()
		}
		else {
			mavenDeployer {

				if (isReleaseBuild) {
					beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
				}

				repository(url: sonatypeRepositoryUrl) {
					authentication(userName: ossrhUsername, password: ossrhPassword)
				}

				pom.project {
					name 'lorem-enhanced'
					packaging 'jar'
					description 'an enhanced lorem ipsum generator'
					url 'https://github.com/nhalase/lorem-enhanced'

					scm {
						connection 'scm:git:git://github.com/nhalase/lorem-enhanced.git'
						developerConnection 'scm:git:git@github.com:nhalase/lorem-enhanced.git'
						url 'https://github.com/nhalase/lorem-enhanced'
					}

					licenses {
						license {
							name 'MIT License'
							url 'http://www.opensource.org/licenses/mit-license.php'
						}
					}

					developers {
						developer {
							id 'njhalase'
							name 'Nicholas J Halase'
							email 'nick@halase.me'
						}
					}
				}
			}
		}
	}
}
